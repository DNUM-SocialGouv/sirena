name: Integration - build and deploy

on:
  push:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GITOPS_REPO: fabrique-atlas/org-sdpsn-ws-sirena
  
jobs:
  build-docker:
    name: Build docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Compute image tag
        run: |
          echo "SHORT_SHA=${GITHUB_SHA::8}" | tee -a "$GITHUB_ENV"

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.SHORT_SHA }}
            
      - name: Save image tag in an env var
        id: save_image_tag
        run: |
          echo "IMAGE_TAG=${{ steps.meta.outputs.tags }}" >> $GITHUB_ENV
          echo "image_tag=${{ env.IMAGE_TAG }}" >> $GITHUB_OUTPUT

      - name: Build and push Docker backend image
        uses: docker/build-push-action@v5
        with:
          context: . 
          file: apps/backend/Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG }}-backend
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Docker frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/frontend/Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG }}-frontend
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_IS_LOGGED_TOKEN_NAME=is_logged_token
            
    outputs:
      image_tag: ${{ steps.save_image_tag.outputs.image_tag }}

  deploy:
    name: Generate kubernetes manifests and deploy
    needs: build-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      IMAGE_TAG: ${{ needs.build-docker.outputs.image_tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          cd deploy
          npm ci
      
      - name: Check format and lint
        run: |
          cd deploy
          npm run lint

      - name: Render manifests
        run: |
          cd deploy
          export IMAGE_TAG=${{ env.IMAGE_TAG }}
          export ENVIRONNEMENT=test
          npm run build

      - name: Checkout GitOps repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.GITOPS_REPO }}
          path: gitops-repo
          ssh-key: ${{ secrets.GITOPS_REPO_KEY }}

      - run: |
          rm -f gitops-repo/deployment-targets/test
          cp -r deploy/dist gitops-repo/deployment-targets/test

          git config --global user.name "github-actions[bot]"
          # mail standard bot github Actions  
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          cd gitops-repo
          git add .
          git commit -m '[test] new version ${{ env.SHORT_SHA }}'
          git push 