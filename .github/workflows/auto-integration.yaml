name: Integration - build and deploy

on:
  push:
    branches:
      - main

env:
  INTEGRATION_BACKEND_URL: https://sirena.integration.dev.atlas.fabrique.social.gouv.fr/api
  INTEGRATION_FRONTEND_URL: https://sirena.integration.dev.atlas.fabrique.social.gouv.fr

jobs:
  build-docker:
    name: Build docker images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v5

      - name: Compute short sha
        id: compute_short_sha
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_OUTPUT

      - name: Build and push Docker images
        uses: ./.github/actions/build-docker
        with:
          version: ${{ steps.compute_short_sha.outputs.SHORT_SHA }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          environment: ${{ github.event.inputs.inputs.environment }}

    outputs:
      SHORT_SHA: ${{ steps.compute_short_sha.outputs.SHORT_SHA }}

  deploy:
    name: Deploy to GitOps
    needs: build-docker
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Deploy to GitOps
        uses: ./.github/actions/deploy-gitops
        with:
          environment: integration
          version: ${{ needs.build-docker.outputs.SHORT_SHA }}
          gitops-repo-key: ${{ secrets.GITOPS_REPO_KEY }} 

  e2e-tests:
    name: End-to-End Tests
    needs: [build-docker, deploy]
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          cd apps/frontend
          pnpm install

      - name: Install Playwright Browsers
        run: |
          cd apps/frontend
          npx playwright install --with-deps chromium

      - name: Install tsx
        run: pnpm add -g tsx

      - name: Wait for deployment
        run: |
          cd apps/frontend
          npx tsx tests/ci/wait-for-deployment.ts
        env:
          EXPECTED_VERSION: ${{ needs.build-docker.outputs.SHORT_SHA }}
          BACKEND_URL: ${{ env.INTEGRATION_BACKEND_URL }}
          FRONTEND_URL: ${{ env.INTEGRATION_FRONTEND_URL }}

      - name: Run Playwright tests
        run: |
          cd apps/frontend
          pnpm run test:e2e
        env:
          FRONTEND_URI: ${{ env.INTEGRATION_FRONTEND_URL }}
          E2E_CI: true
          E2E_ENTITY_ADMIN_USER_1_EMAIL: ${{ vars.TEST_USER_EMAIL }}
          E2E_ENTITY_ADMIN_USER_1_PASSWORD: ${{ vars.TEST_USER_PASSWORD }}

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: playwright-report
          path: apps/frontend/playwright-report/
          retention-days: 1