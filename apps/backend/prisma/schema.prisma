// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

generator zod {
  provider = "zod-prisma-types"
  output   = "../generated/zod"
}

datasource db {
  provider = "postgresql"
  url      = env("PG_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique /// @zod.string.email({ message: 'Invalid email address' }),
  firstName String
  lastName  String
  uid       String    @unique
  sub       String    @unique
  createdAt DateTime  @default(now())
  Sessions  Session[]
  active    Boolean   @default(false)
  roleId String?
  role   Role?   @relation(fields: [roleId], references: [id])
}

model Session {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  token     String   @unique
  expiresAt DateTime
  pcIdToken String   @unique
  createdAt DateTime @default(now())
}

model Role {
  id          String @id @default(cuid())
  roleName    String @unique
  description String
  users       User[] // Relation inverse : un r√¥le peut avoir plusieurs utilisateurs
}
