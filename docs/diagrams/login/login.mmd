%% https://mermaid.live/edit for generation

sequenceDiagram
    participant User
    participant Browser
    participant App as API Server
    participant Proconnect as Proconnect
    participant UserSvc as UserService (internal service) 
    participant SessionSvc as SessionService (internal service)

    %% 1. Login initiation
    User->>Browser: clique sur « Se connecter »
    Browser->>App: GET /api/auth/login
    App->>App: buildAuthorizationUrl()
    App->>App: createCookie(state), createCookie(nonce)
    App-->>Browser: 302 Redirect to Proconnect (with state, nonce)

    %% 2. User auth on Proconnect
    Browser->>Proconnect: GET /authorize?state&nonce
    Proconnect-->>Browser: 302 Redirect to /api/auth/callback?code&state

    %% 3. Callback handling
    Browser->>App: GET /api/auth/callback?code&state
    App->>App: deleteCookie(state), deleteCookie(nonce)
    App->>Proconnect: authorizationCodeGrant(code, state, nonce)
    Proconnect-->>App: { id_token, access_token, refresh_token }
    App->>Proconnect: fetchUserInfo(access_token)
    Proconnect-->>App: userInfo

    %% 4. User lookup / creation
    App->>UserSvc: getUserBySub(userInfo.sub)
    alt utilisateur existant
        UserSvc-->>App: user
    else nouvel utilisateur
        App->>UserSvc: createUser(userInfo)
        UserSvc-->>App: new user
    end

    %% 5. Token issuance & session
    App->>App: signAuthCookie(user.id)
    App->>App: signRefreshCookie(user.id)
    App->>SessionSvc: createSession(user.id, refresh_token)
    App-->>Browser: Set-Cookie AUTH_TOKEN
    App-->>Browser: Set-Cookie REFRESH_TOKEN
    App-->>Browser: Set-Cookie IS_LOGGED
    App-->>Browser: 302 Redirect FRONTEND_REDIRECT_URI
